name: Build Debian Package

on: [push, pull_request, workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      # 1. Fetch sources (incl. submodules)
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      # 2. Cache ccache
      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ccache-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            ccache-${{ runner.os }}-

      # 3. System packages required to build, package, and sign
      - name: Install build dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends \
            ca-certificates               \
            ccache                         \
            cmake                          \
            debhelper                      \
            devscripts                     \
            libboost-all-dev               \
            libcpprest-dev                 \
            libssl-dev                     \
            wget

      # 4. Build & install gRPC v1.60.0 (Ubuntu 24.04 has no official package yet)
      - name: Build gRPC v1.60.0
        run: |
          git clone --depth 1 --recurse-submodules -b v1.60.0 \
          https://github.com/grpc/grpc /tmp/grpc
          cmake -S /tmp/grpc -B /tmp/grpc/build \
             -DCMAKE_INSTALL_PREFIX=/usr/local \
             -DBUILD_SHARED_LIBS=ON \
             -DgRPC_INSTALL=ON \
             -DgRPC_BUILD_TESTS=OFF \
             -DgRPC_ZLIB_PROVIDER=package \
             -DgRPC_SSL_PROVIDER=package
          cmake --build /tmp/grpc/build -j"$(nproc)"
          sudo cmake --install /tmp/grpc/build
          sudo ldconfig

      - name: Configure CMake & CPack
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release -- -j"$(nproc)"

      - name: Package .deb via CPack
        run: |
          cd build
          cpack -G DEB

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload .deb to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/*.deb
          asset_name: ${{ runner.os }}-${{ github.repository }}-${{ github.ref_name }}.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Show ccache stats
        if: always()
        run: ccache --show-stats